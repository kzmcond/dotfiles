############################
# set-option        => set
# set-window-option => setw
############################
# #S - session
# #W - window
# #P - pane
###############################
# tmux display-message -P '#S'
###############################

unbind C-b
set -g prefix C-z
bind C-z send-prefix

#set -g default-shell '/usr/bin/zsh'
set -g default-shell '/usr/local/bin/zsh'
#setw -g utf8 on

# Config Reload
unbind r
bind r source-file ~/.tmux.conf \; display-message "Reload Config!!"

# terminalのタイトルを変更
#set -g set-titles on
#set -g set-titles-string "#S @ #H"
setw -g pane-border-format '#{pane_tty} | #{pane_current_path}'

set -g display-time 6000
set -g display-panes-time 3000
set -g history-limit 10000
set -g buffer-limit 20

set -s escape-time 0
#set -g base-index 1
#set -g pane-base-index 1
set -g renumber-windows on
setw -g automatic-rename on

set -g focus-events on
###########
# key bind
###########
bind - select-layout even-vertical
bind | select-layout even-horizontal
bind -r < resize-pane -L 1
bind -r > resize-pane -R 1
bind -r - resize-pane -D 1
bind -r + resize-pane -U 1
bind : command-prompt
bind C-i select-pane -t :.+
bind Escape copy-mode
bind C-b confirm kill-session
#bind k confirm kill-window
#bind K confirm kill-server
setw -g mode-keys vi
#la pane movement
#bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
#bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"
# windowの作成・移動(M:Alt)
bind -n M-c new-window -c "#{pane_current_path}"
bind -n M-j next-window
bind -n M-k previous-window
bind -T root -n C-Right next-window
bind -T root -n C-Left previous-window
# sessionの作成・移動
bind -n M-C new-session
bind -n M-l switch-client -n
bind -n M-h switch-client -p
bind -n S-M-Right switch-client -n
bind -n S-M-Left switch-client -p
bind -n C-Tab switch-client -n
bind -n C-S-Tab switch-client -p
# paneの分割
bind -n M-v split-window -h -c "#{pane_current_path}"
#bind v split-window -h
bind | split-window -h \; select-layout even-horizontal
bind -n M-s split-window -v -c "#{pane_current_path}"
#bind s split-window -v
bind - split-window -v \; select-layout even-vertical
# paneの移動
bind -n C-h select-pane -L
bind -n C-j select-pane -D
bind -n C-k select-pane -U
bind -n C-l select-pane -R
bind -n M-Left select-pane -L
bind -n M-Down select-pane -D
bind -n M-Up select-pane -U
bind -n M-Right select-pane -R
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# paneの削除
bind -n M-x confirm kill-pane
bind -n M-X confirm kill-window
bind -n C-x confirm kill-session
bind -n C-X confirm kill-server
# choose-tree / choose-session
bind -n M-a choose-tree    # session/window/pane(thumbnail)
bind -n M-w choose-tree -w # session/window
bind -n M-e choose-session # session

# 選択されているペインを右側にあるウィンドウへ移動する
bind -n S-Right join-pane -h -t :+
# 選択されているペインを左側にあるウィンドウへ移動する
bind -n S-Left join-pane -h -t :-
# 選択されているペインを現在のウィンドウから、新ウィンドウを作成しそこに移動する
bind -n S-Down break-pane

# paneの入れ替え(-d: フォーカス固定)
bind -n C-S-left swap-pane -D # 反時計回り(フォーカス固定)
bind -n C-S-right swap-pane -U # 時計回り(フォーカス固定)
###############
# copy & paste
###############
#bind -t vi-copy Enter copy-pipe "cat | xsel -i --clipboard"
# copy mode  <prefix>[ --> v --> y OR Enter
#bind -t vi-copy v begin-selection
#bind -t vi-copy C-v rectangle-toggle
#bind -t vi-copy y copy-pipe "xsel -bi"
#bind -t vi-copy Enter copy-pipe "xsel -bi"

# Ubuntu (xsel OR xclip)
## xsel (sudo apt install xsel)
## Usage: <prefix>[ --> space OR C-y --> y OR Enter
bind-key -T copy-mode-vi C-v send-keys -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "xsel -ip && xsel -op | xsel -ib"
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "xsel -ip && xsel -op | xsel -ib"

# xclip (sudo apt install xclip)
#bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -sel clip > /dev/null"
#bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -sel clip > /dev/null"

# macOS
#bind-key -T copy-mode-vi v send-keys -X begin-selection
#bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
#bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

#bind-key w list-window -F "表示項目の設定"

# mouse
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

set -g default-terminal screen-256color
#set -g default-terminal xterm-256color
#set -g default-terminal tmux-256color
#set -g default-terminal xterm

#set -g terminal-overrides 'xterm:colors=256'
#set -sa terminal-overrides 'xterm-256color:RGB'
set -ga terminal-overrides 'xterm-256color:Tc'

setw -g xterm-keys on

##############
# status line
##############
# tmux-powerline
set-option -g status on
set-option -g status-interval 1
#set-option -g status-utf8 on
#set-option -g status-position top

#set -g status-justify "left"

#set -g status-bg colour235
#set -g status-left-length 100
#set -g status-right-length 120

#setw -g window-status-current-format "#[fg=colour235, bg=colour27]⮀#[fg=colour255, bg=colour27] #I ⮁ #W #[fg=colour27, bg=colour235]⮀"

#set -g status-left "#(~/bin/powerline.sh left)"
#set -g status-right "#(~/bin/powerline.sh right)"
#set -g status-left "#(~/.tmux/tmux-powerline/powerline.sh left)"
#set -g status-right "#(~/.tmux/tmux-powerline/powerline.sh right)"
#set -g status-left "#(~/.tmux/tmux-powerline/powerline.sh left)"
#set -g status-left "#(~/.tmux/tmux-powerline/powerline.sh left)#[bg=red]#[fg=black]⮀#[bg=red]#[fg=white] #(used-mem) %% #[bg=black]#[fg=red]⮀"
#setw -g window-status-current-format "#[fg=colour235, bg=colour27]⮀#[fg=colour255, bg=colour27] #I ⮁ #W #[fg=colour27, bg=colour235]⮀"
#bind C-[ run '~/.tmux/tmux-powerline/mute_powerline.sh left'		# Mute left statusbar.
#bind C-] run '~/.tmux/tmux-powerline/mute_powerline.sh right'		# Mute right statusbar.
##########
source "/usr/share/powerline/bindings/tmux/powerline.conf"
#####

# status-left
# #S => セッション番号 #H => ホスト名  #P => ペイン番号
# #[default] => 属性をリセット
###@@@set -g status-left "Session: #S #[default]"
#set -g status-left "#[fg=colour255,bg=colour241]Session: #S #[default]"

# status-right
# #h => ホスト名(ドメイン名を除く)
# %p => AM/PM %I => 12時間制 %y => 年(2桁) %T => 時分秒
###@@@set -g status-right "LA: #(cut -d' ' -f-3 /proc/loadavg) | %a, %b.%d, %Y %H:%M:%S #[default]"
#set -g status-right "#[fg=colour255,bg=colour241] #h | LA: #(cut -d' ' -f-3 /proc/loadavg) | %Y/%m/%d(%a) %H:%M:%S#[default]"
#set -g status-right "%y/%m/%d(%a) %T"
#set -g status-right "#(w | head -1 | cut -d, -f4) | %Y/%m/%d (%a) %p %I:%M"
#set -g status-right "#(w | head -1 | cut -d, -f4) | %Y/%m/%d (%a) %H:%M"

# window-status
# #I => ウィンドウのindex #W => ウィンドウ名
###@@@setw -g window-status-format " #I: #W #[default]"
#setw -g window-status-format "[#I:#{pane_current_path}]"

# window-status-current
# #P => ペインのindex #{pane_current_path}
#setw -g window-status-current-format "#[fg=colour255,bg=colour27,bold] #I: #W#[default]"
###@@@setw -g window-status-current-format "#[bold] #I: #W#[default]"
#setw -g window-status-current-format " #I:#W [#{pane_current_path}]"

########
# Color
########
# status-line
##set -g status-bg black
#set -g status-bg "colour238"
##set -g status-fg cyan
#set -g status-fg "colour255"

# status-left
#set -g status-left-bg magenta
#set -g status-left-fg black

# status-right
#set -g status-right-bg green
#set -g status-right-fg black

# window-status-current
#setw -g window-status-current-bg cyan
#setw -g window-status-current-fg black

# pane-active-border
#set -g pane-active-border-bg cyan
#set -g pane-active-border-fg black

# tmuxline.conf
#source ~/tmuxline.conf
# iceberg-dark
#source ~/.tmux/iceberg_minimal.tmux.conf
#source ~/.tmux/iceberg.tmux.conf

#set-hook -g pane-exited 'select-layout tiled' 
