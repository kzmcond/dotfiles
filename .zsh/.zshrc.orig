# LANG
#case $TERM in
#    linux) export LANG=C ;;
#    *) export LANG=ja_JP.UTF-8 ;;
#esac
export LANG=ja_JP.UTF-8
case ${UID} in
0)
    LANG=C
    ;;
esac
######################################################################
# cdコマンドのサーチパス
cdpath=(.. ~ ~/src ~/zsh)
######################################################################
# デフォルトパーミッションの設定(ファイル : 644, ディレクトリ : 755)
umask 022
######################################################################
# エイリアス
setopt complete_aliases  # aliased ls needs if file/dir completions work

alias where='command -v'

alias vi='/usr/local/bin/vim'
alias mv='nocorrect mv'
alias cp='nocorrect cp'
alias mkdir='nocorrect mkdir'

alias pd='popd'

# Mozc設定画面
alias mozc_tool='/usr/lib/mozc/mozc_tool --mode=config_dialog'

alias j='jobs -l'
alias h=history

alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'

case "${OSTYPE}" in
freebsd*|darwin*)
    alias ls="ls -G -w"
    ;;
linux*)
    alias ls="ls --color=auto"
    ;;
esac

alias ll='ls -l --color=auto'
alias la='ls -a --color=auto'
alias lf='ls -F --color=auto'
alias lla='ls -la --color=auto'
alias llrt='ls -lrt --color=auto'
alias lsi='ls -i --color=auto'
#alias l='ls -CF'
#alias dir='ls --color=auto --format=vertical'
#alias vdir='ls --color=auto --format=long'

alias lv='lv -c'

# ディレクトリとディレクトリのシンボリックリンクのみ表示
alias lsd='ls -ld *(-/DN)'

# "."で始まるファイルのみ表示
alias lsa='ls -ld .*'

#alias less='less -N'

alias du='du -h'
alias df='df -h'
alias dft='df -Th'
alias free='free -m'

alias su="su -l"

alias conv='convmv -r -f shiftjis -t utf8 * --notest'

alias dmesg='dmesg | less'
#alias terminator='terminator -fb &'

#alias server_name='ssh -v -l USERNAME IP ADDRESS'
#alias rm='rm -i'
#alias emenu='aterm nano -e ~/.e16/menus/user_apps'

#alias aptar='sudo apt-get autoremove'  #Ubuntu

#alias yumck='sudo yum check-update'  #Fedora
#alias yumup='sudo yum update'  #Fedora
#alias yumca='sudo yum clean all'  #Fedora

alias google_key='wget https://dl-ssl.google.com/linux/linux_signing_key.pub && sudo rpm --import linux_signing_key.pub'  # Google Public Key
#alias brpm='rpm -ivh ~/RPM/*rpm'
#alias astart='cd ~/GNUstep/Library/AfterStep/start'

#alias menulst='sudo vi /boot/grub/menu.lst'
#alias reboot='sudo reboot'
alias gterm='/bin/sh -c "VTE_CJK_WIDTH=1 gnome-terminal --disable-factory" &'
#alias gterm='/usr/bin/gnome-terminal &'

alias cd_trash='cd ~/.local/share/Trash/files'
alias cd_dta='cd ~/Download/dta'
alias cd_xorg='cd /etc/X11'
alias cd_bootchart='cd /var/log/bootchart'
alias cd_ss='cd /usr/share/gnome-screensaver'
alias vi_wp="vi ~/.gconf/desktop/gnome/background/%gconf.xml"

alias visudo='sudo vi /etc/sudoers'
alias suvi='sudo vi'
alias suge='sudo gedit'

# 不要なパッケージを表示
alias pc-leaves='sudo package-cleanup --leaves'
# 
alias lsdir='ls -l | grep ^d'

alias vmconf='sudo vmware-config.pl' # VmWare Server Reconfigure
alias vbconf='sudo /etc/init.d/vboxdrv setup' # VirtualBox Reconfigure

alias htags='htags -ansx' # GNU Global(a : alpaabet  n : line-number  s : symbol  x : xhtml)

# DVD Burn
alias cdrec_scan='cdrecord -scanbus'

# netstat
alias netstat_ntu='netstat -ntu'
alias netstat_nltu='netstat -nltu'

# ps e : all  f : full  w : wrap
alias ps_efw='ps -efw'

# ps(Memory Usage : RSS) a : 端末を持つ全プロセス x : 全プロセス  l : long
#alias ps_ram='ps alxwO r | awk '{ print $3"\t"$8"\t"$13 }''
# pid
alias ls_pid='ls /var/run/*.pid'
alias ll_pid='ls -l /var/run/*.pid'

# fuser
alias fuser='sudo fuser'
# route
alias route='sudo route -CFvnee'
# memory cache
alias drop_cache='sudo sysctl -w vm.drop_caches=1'

# access_logでphpを含みjpgとpngを含まない
# fgrep : grep -F 改行で区切られた文字列リストとして扱う
# egrep : grep -E 正規表現
# -v    : マッチしない
alias tail_access_log='sudo tail -f /var/log/httpd/access_log | fgrep php | egrep -v "jpg|png"'

# Figlet
alias figlet='/usr/bin/figlet'

# local mail
alias localmail='vi /var/mail/kzmcond'

# tail
alias tail_msg='sudo tail -f /var/log/messages'

# sysstat(pidstat)
alias pidstat='sudo pidstat -d'

# Apache Modules
#alias httpd_m='sudo httpd -M'
#alias httpd_l='sudo httpd -l'

# Apache2(Ubuntu)
#alias cd_apache2conf='cd /etc/apache2'
#alias vi_apache2conf='sudo vi /etc/apache2/apache2.conf'
#alias lv_acc_log='sudo lv /var/log/apache2/access.log'
#alias lv_err_log='sudo lv /var/log/apache2/error.log'
#alias vi_apache2enable='sudo vi /etc/apache2/sites-enabled/000-default'
#alias vi_apache2avail='sudo vi /etc/apache2/sites-available/default'
#alias apache2_restart='sudo /etc/init.d/apache2 restart'

# Passenger
alias passenger-status='sudo passenger-status'

# Wake on Lan
#alias wol_845E='wakeonlan -f ~/bin/wol/845E.wol'

# Kernel Param
alias sysctl='sudo sysctl -a'

# Screen
#alias scr_prof='screen-profiles'

# Ruby
alias rbe='rbenv'
alias be='bundle exec'
alias rvm="$HOME/.rvm/bin/rvm"
alias r='rails'
alias bundle_i='bundle install --path vendor/bundle'
alias r_dm='rake db:migrate'
alias gem_srv='gem server'

alias r_da='rake doc:app'
alias r_dr='rake doc:rails'
alias r_dp='rake doc:plugins'
alias r_dra='rake doc:reapp'
alias r_drr='rake doc:rerails'

alias mongo_start="sudo /usr/local/mongodb/bin/mongod --dbpath /var/db/mongo"

alias show_gemdoc='chromium-browser http://localhost:8808'
alias railsdoc='chromium-browser /usr/lib/ruby/gems/1.8/doc/actionpack-2.3.2/rdoc/index.html'
alias railsdoc_r='chromium-browser http://api.rubyonrails.org/'
alias rubydoc_r='chromium-browser http://www.ruby-lang.org/ja/man/html/index.html'
alias webrick="ruby -rwebrick -e 'WEBrick::HTTPServer.new({:DocumentRoot => \"./\", :Port => 3000}).start'"
alias ruby-ref='ruby /home/kzmcond/Documents/Ref/Ruby/ruby-refm/server.rb'
alias ruby-ref-browse='/usr/bin/chromium-browser http://localhost:10080/ &'
alias spec='spec -c'
alias gemdoc='`gem env gemdir`/doc'
alias cd_gemdoc='cd `gem env gemdir`/doc'

alias rurema_s='rurema --server --browser'

# Git
alias g='git'
alias git="$HOME/bin/git"
#alias git_show='git show | lv'
#alias git_diff='git diff | lv'
alias gs='git status '
alias ga='git add '
alias gb='git branch '
alias gc='git commit'
alias gd='git diff'
alias go='git checkout '
alias gk='gitk --all&'
#alias gx='gitx --all' # only mac os x

#alias got='git '
#alias get='git '

# Mozilla
#alias fx='sh /home/kzmcond/bin/mozilla/fx35.sh'
#alias tb='sh /home/kzmcond/bin/mozilla/tb3b2.sh'
#alias fx1='/home/kzmcond/firefox/firefox'
#alias fftr='/home/kzmcond/firefox/firefox http://www.techrepublic.com'

alias vipw='sudo vipw'
alias vigr='sudo vigr'
alias visudo='sudo visudo'

# VBoxManage
alias vbm='/usr/bin/VBoxManage'
alias strvm_sv1='VBoxManage startvm "Srv1" --type headless'
alias strvm_ubusv='VBoxManage startvm "Ubuntu_Svr" --type headless'
alias endvm_sv1='VBoxManage controlvm "Srv1" poweroff'
alias endvm_ubusv='VBoxManage controlvm "Ubuntu_Svr" poweroff'
alias vbox_centos_start='/usr/bin/VBoxManage startvm CentOS5-Base --type headless'

alias gd='dirs -v; echo -n "select number: "; read newdir; cd -"$newdir"'

alias conky_reload='killall -SIGUSR1 conky'
alias get_gem_list_path="ruby -e 'puts $:'"

alias web='/usr/bin/chromium-browser'
alias vim73patche='ftp://ftp.vim.org/pub/vim/patches/7.3/'

alias clamscan='/usr/bin/clamscan -v'
alias cs='/usr/bin/clamscan -v'
alias csa='/usr/bin/clamscan -v *'

#alias taskshell='ZDOTDIR=~/.task zsh'

# CentOS
#alias rh_ver='cat /etc/redhat-release'

######################################################################
# グローバルエイリアス
alias -g M='|more'
alias -g H='|head'
alias -g T='|tail'
alias -g G='|grep'
alias -g GI='|grep -i'
######################################################################
# 
alias -s log=cat
#alias -s c=vim
#alias -s h=vim
#alias -s cpp=vim
#alias -s sh=vim
alias -s txt=less
alias -s xml=less
alias -s rb=vim
######################################################################
# csh風のsetenvを関数で定義
setenv() { typeset -x "${1}${1:+=}{(@)argv[2,$#]}" }
######################################################################
# autoloadされる関数を検索するパス
#fpath=($fpath ~/.zfunc)
fpath=(${HOME}/.zsh/functions/Completion ${HOME}/.zfunc ${fpath})
######################################################################
# 重複する要素を自動的に削除
typeset -U path cdpath fpath manpath
######################################################################
# manマニュアルの設定されているディレクトリパス
#manpath=($X11HOME/man /usr/man /usr/lang/man /usr/local/man)
manpath=($X11HOME/man /usr/man /usr/lang/man /usr/local/man /usr/share/man /usr/local/share/man /usr/X11R6/man /opt/man)
export MANPATH
######################################################################
# その他の環境変数の定義
export MAIL=/var/spool/mail/$USERNAME
######################################################################
# ヒストリ
HISTSIZE=100000  # メモリに展開する履歴数
SAVEHIST=100000  # 保存する履歴数
HISTFILE=~/.zsh_history
DIRSTACKSIZE=20
######################################################################
# Ruby
#export RUBYOPT="rubygems"
#export RI="--format ansi --width 70"

# Rails
#export BASE_PATH=$HOME/.rails/app_template/groundwork/base
######################################################################
# zshオプションの設定
setopt notify  # バックグラウンドジョブの状態を即座に表示
setopt globdots  # .で始まるファイルにもマッチさせる
setopt correct  # コマンド名のスペル訂正を試みる
setopt correctall  # 引数についてもスペル訂正を試みる
setopt pushdtohome  # 引数無しでpushdを実行するとpushd $HOME として動作
setopt cdable_vars  # 絶対パスが入った変数をディレクトリとみなす
setopt autolist  # 補完候補が複数ある場合、自動でメニューをリストアップ
setopt auto_cd  # ディレクトリ名のみで移動
setopt recexact
setopt longlistjobs  # ジョブリストにロングフォーマットを使用(jobs -l)
setopt autoresume  # ジョブの頭文字1文字のみでジョブの再実行を行う
setopt extended_history  # コマンドの実行時間もヒストリに記録
setopt histnostore  # historyコマンドをヒストリから除去
setopt histignorespace  # スペースで始まる行はヒストリに記録しない
setopt incappendhistory  # コマンド実行時にすぐにヒストリファイルに書き出す
setopt share_history  # 複数のzshセッションでヒストリをリアルタイムで共有
setopt hist_ignore_dups  # 同一コマンドを連続実行した場合、1つしか記録しない
setopt noclobber  # リダイレクトに伴うファイル作成／削除の挙動
setopt auto_pushd  # cdコマンドのみでディレクトリスタックにpushd
setopt pushdminus
setopt extended_glob  # 拡張グロブを使用(#,~,^を正規表現で使用)
#setopt rmstarsilent  # rmコマンドで*が指定された場合、確認を行わない
setopt pushdignoredups # 重複するディレクトリをpushd(登録)しない
setopt listpacked  # 補完候補を詰めて表示
setopt listrowsfirst  # 補完の表示順序を水平方向にする
setopt ignoreeof  # Ctrl + Dによるログアウトを抑制
setopt nobeep  # ビープ音を鳴らさない
setopt nolistbeep  # no beep sound when complete list displayed
setopt auto_menu  # Tabで補完候補を切替
setopt auto_param_keys  # カッコの対応を自動的に補完
setopt noautoremoveslash  # no remove postfix slash of command line
unsetopt autoparamslash  # ディレクトリパスが格納された変数を補完した場合、末尾を/にする
#unsetopt promptcr  # 改行の無い出力をプロンプトで上書き禁止
#unsetopt flowcontrol  # P151
######################################################################
# zshモジュールのロード
zmodload -a zsh/stat stat  # statコマンド
zmodload -a zsh/zpty zpty
zmodload -a zsh/zprof zprof
zmodload -a zsh/mapfile mapfile
######################################################################
# Keybind configulation
# emacs like keybind
# (e.x. Ctrl-a gets to line head and Ctrl-e geto to end) and something additons

export EDITOR=vim
bindkey -e  # emacs mode
#bindkey -v  # vi mode

bindkey "^[[1~" beginning-of-line  # Home gets to line head
bindkey "^[[4~" end-of-line        # End gets to line end
bindkey "^[[3~" delete-char        # Del
######################################################################
# 補完機能を有効にする
autoload -Uz compinit
compinit
######################################################################
# プロンプトに色を付ける
autoload -U colors
colors
######################################################################
# プロンプトの設定
# PROMPT : 通常 / PROMPT2 : 複数行(for, while) / SPROMPT : 入力ミス確認 
#PROMPT='%m%# '
#PROMPT="%m%# %{${fg[blue]}%} %~ %{${fg[green]}%}%# %{${fg[white]}%"

#USER_NAME=`whoami`

local BLACK=$'%{\e[1;30m%}'
local RED=$'%{\e[1;31m%}'
local GREEN=$'%{\e[1;32m%}'
local YELLOW=$'%{\e[1;33m%}'
local BLUE=$'%{\e[1;34m%}'
local PURPLE=$'%{\e[1;35m%}'
local CYAN=$'%{\e[1;36m%}'
local WHITE=$'%{\e[1;37m%}'
local DEFAULT=$'%{\e[1;m%}'

case ${UID} in
0)
#    PROMPT="%B%{${fg[red]}%}%/#%{${reset_color}%}%b "
    PROMPT="%{${fg[cyan]}%}$(echo ${HOST%%.*} | tr '[a-z]' '[A-Z]') %B%{${fg[red]}%}%/#%{${reset_color}%}%b "
#    PROMPT="%{${fg[red]}%}[%n@%m %~]%%%{${reset_color}%} "
    PROMPT2="%B%{${fg[red]}%}%_#%{${reset_color}%}%b "
    SPROMPT="%B%{${fg[red]}%}%r is correct? [n,y,a,e]:%{${reset_color}%}%b "
#    [ -n "${REMOTEHOST}${SSH_CONNECTION}" ] && 
#        PROMPT="%{${fg[cyan]}%}$(echo ${HOST%%.*} | tr '[a-z]' '[A-Z]') ${PROMPT}"
    ;;
*)
#    PROMPT="%{${fg[white]}${bg[blue]%}[%n@%m %~]%%%{${reset_color}%} "
#    PROMPT="%{${fg[cyan]}%}[%n@%m %~]%%%{${reset_color}%} "
##    PROMPT="%{${fg[cyan]}%}%/%%%{${reset_color}%} "    
    PROMPT="%{$fg[cyan]%}%n@%m %# %{${reset_color}%}"
#    PROMPT="%B%{$fg[cyan]%}%n%{${reset_color}%}@%{$fg[green]%}%m%{${reset_color}%} %# %b"
    PROMPT2="%{${fg[blue]}%}%_%%%{${reset_color}%} "
    SPROMPT="%{${fg[yellow]}%}%r is correct? [n,y,a,e]:%{${reset_color}%} "
    [ -n "${REMOTEHOST}${SSH_CONNECTION}" ] && 
        PROMPT="%{${fg[green]}%}$(echo ${HOST%%.*} | tr '[a-z]' '[A-Z]') ${PROMPT}"
    ;;
esac

#####
# Colours {{{
#local HOSTNAME_COLOR=$'%{\e[38;5;190m%}'
#local USERNAME_COLOR=$'%{\e[38;5;199m%}'
#local PATH_COLOR=$'%{\e[38;5;61m%}'
#local RVM_COLOR=$'%{\e[38;5;31m%}'
#local VCS_COLOR=$'%{\e[38;5;248m%}'
# }}}

# Prompt {{{
# colors#  → 色指定  $fg[色名]/$bg[色名]/$reset_color (${, $} で囲む必要がある)
# 30黒 31赤 32緑 33黄 34青 35紫 36水 37白
# http://coderepos.org/share/export/9486/dotfiles/zsh/mobcov/.zsh/.zshrc
#autoload colors
#colors

#RVM_INFO=$'%{$RVM_COLOR%}$(rvm_prompt)%{${reset_color}%}'
#PROMPT="%{$USERNAME_COLOR%}${USER}%(!.#.$)%{${reset_color}%} "
#VCS_INFO="%1(v|%{$VCS_COLOR%}%1v%f|)"
#RPROMPT="${VCS_INFO}${RVM_INFO}%{$PATH_COLOR%}[%~]%{${reset_color}%}"
#SPROMPT="%{${fg[red]}%}%r is correct? [n,y,a,e]:%{${reset_color}%} "
#PROMPT="%{$HOSTNAME_COLOR%}$(echo ${HOST%%.*} | tr '[a-z]' '[A-Z]') ${PROMPT}"
#####

RPROMPT="%{$fg[yellow]%}%~%{${reset_color}%}"
#RPROMPT="%{$fg[yellow]%}%${rvm_prompt}~%{${reset_color}%}"

#RPROMPT=$GREEN'[%~]'$DEFAULT
#setopt PROMPT_SUBST
######################################################################
nprom () {
    setopt prompt_subst
    local rbase=$'%{\e[33m%}%B[%~]%b%{\e[m%}' lf=$'\n'
    local pct=$'%0(?||%18(?||%{\e[31m%}))%#%{\e[m%}'
    RPROMPT="%9(~||$rbase)"
    case "$USER" in
        kzmcond)  PROMPT=$'%{\e[36m%}%S[%n@%m]%s %%%{\e[m%} ' ;;
        java)   PROMPT=$'%{\e[36m%}%U%m{%n}%%%{\e[m%}%u ' ;;
        *)      local pbase=$'%{\e[$[32+RANDOM%5]m%}%U%B%m{%n}%b'"$pct%u "
                PROMPT="%9(~|$rbase$lf|)$pbase"
                ;;
    esac
#    [[ "$TERM" = "screen" ]] && RPROMPT="[%B%~%b]"
}
nprom
######################################################################
# プロンプトのテーマ
autoload promptinit
promptinit

#prompt clint
#prompt elite2 green
#prompt elite2 magenta
#prompt elite2 red
#prompt elite2 yellow
#prompt elite2 blue
#prompt elite2 cyan
######################################################################
# P146
#[ -n $(alias run-help) ] && unalias run-help
#autoload run-help
######################################################################
autoload zed  # zsh editor

# Prediction configuration
#autoload predict-on
#predict-off
######################################################################
# historical backward/sorward search with linehead string binded to ^P/^N
autoload history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end

# P148
#bindkey "^P" history-beginning-search-backward
bindkey "^p" history-beginning-search-backward-end
bindkey "^n" history-beginning-search-forward-end
bindkey "\\ep" history-beginning-search-backward-end
bindkey "\\en" history-beginning-search-forward-end

# reverse menu completion binded to Shift-Tab
bindkey "\e[Z" reverse-menu-complete

######################################################################
# Terminal configuration
case "${TERM}" in
screen)
    TERM=xterm
    ;;
esac

case "${TERM}" in
xterm|xterm-color)
    export LSCOLORS=exfxcxdxbxegedabagacad
    export LS_COLORS='di=34:ln=35:so=32:pi=33:ex=31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'
    zstyle ':completion:*' list-colors 'di=34' 'ln=35' 'so=32' 'ex=31' 'bd=46;34' 'cd=43;34'
    ;;
kterm-color)
    stty erase '^H'
    export LSCOLORS=exfxcxdxbxegedabagacad
    export LS_COLORS='di=34:ln=35:so=32:pi=33:ex=31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'
    zstyle ':completion:*' list-colors 'di=34' 'ln=35' 'so=32' 'ex=31' 'bd=46;34' 'cd=43;34'
    ;;
kterm)
    stty erase '^H'
    ;;
cons25)
    unset LANG
    export LSCOLORS=ExFxCxdxBxegedabagacad
    export LS_COLORS='di=01;34:ln=01;35:so=01;32:ex=01;31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'
    zstyle ':completion:*' list-colors 'di=;34;1' 'ln=;35;1' 'so=;32;1' 'ex=31;1' 'bd=46;34' 'cd=43;34'
    ;;
jfbterm-color)
    export LSCOLORS=gxFxCxdxBxegedabagacad
    export LS_COLORS='di=01;36:ln=01;35:so=01;32:ex=01;31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'
    zstyle ':completion:*' list-colors 'di=;36;1' 'ln=;35;1' 'so=;32;1' 'ex=31;1' 'bd=46;34' 'cd=43;34'
    ;;
esac 
 
# ターミナルのタイトル(Set terminal title including current directory)
case "${TERM}" in
xterm|xterm-color|kterm|kterm-color)
     precmd() {
         echo -ne "\033]0;${USER}@${HOST%%.*}:${PWD}\007"
     }
     ;;
esac

# RVM(Ruby Version Manager)
#[[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm" # Load RVM function
#PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting

######################################################################
# Function
# psの1行抜き
function psx {
    ps aux| head -1 && ps aux | grep $1 | sed -e '/grep/d'
};

# pgrep
function pgrp {
    pgrep -nl $1
};

# tree($1 : 階層  $2 : Directory)
function tree_l {
    tree -L $1 $2
};
    
# cdrecord(dummy) $1 : 5,0,0  $2 : sample.iso
function cdrec_dummy {
    sudo cdrecord -v -dummy dev=$1 $2
};

# cdrecord $1 : 5,0,0  $2 : sample.iso
function cdrec {
    sudo cdrecord -v dev=$1 $2
};

# Plymout Setup($1 : solar / fade-in / pulser / spinfinity / text)
function plymouth_set {
    sudo plymouth-set-default-plugin $1 && sudo /usr/libexec/plymouth/plymouth-update-initrd
};

# VBoxManage clonedh  $1 : old.vdi  $2 : new.vdi
function vboxclone {
    VBoxManage clonehd $1 $2
};

# yumdownloader($1-version.src.rpm)
function yum_dl_src {
    yumdownloader --source --destdir $HOME/Download $1
};

# fuser ($1 : directory)
function fuser_vm {
    sudo fuser -vm $1
};

function fuser_v {
    sudo fuser -v $1
};

# $1 : protcol(ex:tcp)  $2 : port(ex: 80 or http)
function fuser_n {
    sudo fuser -vn $1 $2
};

# 強制的にプロセスを終了($1 : directory)
function fuser_mk {
    sudo fuser -mk $1
};

# md5sum($1 : MD5SUMS)
function md5_ck {
    md5sum -c $1
};

# sha1sum($1 : SHA1SUMS)
function sha1_ck {
    sha1sum -c $1
};

# sha256sum($1 : SHA256SUMS)
function sha256_ck {
    sha256sum -c $1
};

# MTU($1 : eth0  $2 : 1500)
function edit_mtu {
    sudo ifconfig $1 mtu $2
};

# 2つのディレクトリで異なるファイルがないか調べる
function diff_dir {
    diff -brtBEq $1 $2
};

# 任意ディレクトリの容量調査
function ls_du {
    cd $1 
    ls -la $1 | grep "^d" | awk '{print $9}' | du -h
    cd
};

# プロセス名からpidを割り出しkillする
function kill_from_name {
    ps aux| head -1 && ps aux | grep $1 | sed -e '/grep/d'
    kill `/sbin/pidof $1`
};

# Gem Document
function gemsrv {
#    cd $HOME/Test/$1
    cd $HOME/code/$1
    gem server
#    firefox 127.0.0.1:8808/
    /usr/bin/chromium-browser 127.0.0.1:8808/
    cd
};

# gem-open
function gemop {
    gem open $1
}

# Gem Search
function gemsrc {
    vi `gem which $1`
}

# rails new hoge
function r_new {
    prj_dir="$HOME/code/rails/rails32"
    test -d $prj_dir || mkdir -p $prj_dir
    cd $prj_dir
    rvm use 1.9.3@rails32
    rails new $1 --skip-bundle
    cd $1
    bundle install --path vendor/bundle --binstubs
    echo rvm use 1.9.3@rails32 > $prj_dir/$1/.rvmrc
#    echo rvm use --create 1.9.3@$1 > $prj_dir/$1/.rvmrc
}

# show rvm prompt like "1.9.3-p125@gemset_name"
function rvm_prompt {
    result=`rvm-prompt v p g 2> /dev/null`
    if [ "$result" ] ; then
      echo "[$result]"
    fi
}

# 
function rvm_st {
    rvm-prompt i v p g
}

# sudo.vim
sudo() {
  local args
  case $1 in
    vi|vim)
      args=()
      for arg in $@[2,-1]
      do
        if [ $arg[1] = '-' ]; then
          args[$(( 1+$#args ))]=$arg
        else
          args[$(( 1+$#args ))]="sudo:$arg"
        fi
      done
      command vim $args
      ;;
    *)
      command sudo $@
      ;;
  esac
}
###############################################################################
# Load user .zshrc configuration file
[ -f ${HOME}/.zshrc.mine ] && source ${HOME}/.zshrc.mine

###############################################################################
# Original .zshrc
###############################################################################
# Set up the prompt autoload -Uz promptinit promptinit prompt adam1 setopt histignorealldups sharehistory

# Use emacs keybindings even if our EDITOR is set to vi
#bindkey -e

# Keep 1000 lines of history within the shell and save it to ~/.zsh_history:
#HISTSIZE=1000
#SAVEHIST=1000
#HISTFILE=~/.zsh_history

# Use modern completion system
#autoload -Uz compinit
#compinit

#zstyle ':completion:*' auto-description 'specify: %d'
#zstyle ':completion:*' completer _expand _complete _correct _approximate
#zstyle ':completion:*' format 'Completing %d'
#zstyle ':completion:*' group-name ''
#zstyle ':completion:*' menu select=2
#eval "$(dircolors -b)"
#zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
#zstyle ':completion:*' list-colors ''
#zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
#zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
#zstyle ':completion:*' menu select=long
#zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
#zstyle ':completion:*' use-compctl false
#zstyle ':completion:*' verbose true

#zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
#zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'
